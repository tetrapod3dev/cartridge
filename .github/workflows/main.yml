on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
    build:
      runs-on: ${{ github.event_name == 'workflow_dispatch' && 'self-hosted' || 'windows-latest' }}
      steps:
        - uses: actions/checkout@v4
        - uses: subosito/flutter-action@v2
          with:
            channel: 'stable'

        - name: Flutter pub get
          run: flutter pub get

        - name: Run build_runner (freezed/json)
          run: flutter pub run build_runner build --delete-conflicting-outputs

        - name: Generate .env file
          run: |
            Set-Content -Path .env -Value 'RECORD_PRESET_URL="${{ secrets.RECORD_PRESET_URL }}"'
            Add-Content -Path .env -Value 'RECORDER_MOD_URL="${{ secrets.RECORDER_MOD_URL }}"'
            Add-Content -Path .env -Value 'SUPABASE_URL="${{ secrets.SUPABASE_URL }}"'
            Add-Content -Path .env -Value 'SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}"'

        - name: Build Windows (Release)
          run: flutter build windows --release

        - name: Upload Build Artifact
          uses: actions/upload-artifact@v4
          with:
            name: cartridge
            path: ./build/windows/x64/runner/Release

        - name: Install Inno Setup (Chocolatey)
          shell: pwsh
          run: |
            choco install innosetup --no-progress -y
            $candidates = @(
              "${env:ProgramFiles(x86)}\Inno Setup 6\iscc.exe",
              "${env:ProgramFiles}\Inno Setup 6\iscc.exe"
            )
            $found = $false
            foreach ($c in $candidates) {
              Write-Host "Probe: $c"
              if (Test-Path $c) { $env:ISCC = $c; $found = $true; break }
            }
            if (-not $found) {
              $gc = Get-Command iscc.exe -ErrorAction SilentlyContinue
              if ($gc) { $env:ISCC = $gc.Source; $found = $true }
            }
            if (-not $found) {
              throw "ISCC.exe not found after install"
            }
            Write-Host "ISCC = $env:ISCC"

        - name: Verify build output exists (debug)
          shell: pwsh
          run: |
            Get-ChildItem -Recurse -Depth 2 build\windows\x64\runner\Release | Select-Object FullName

        - name: Compile .ISS to .EXE Installer
          shell: pwsh
          run: |
            & "$env:ISCC" /O+ installer\Cartridge.iss

        - name: Upload Installer Artifact
          uses: actions/upload-artifact@v4
          with:
            name: installer
            path: installer/Output/*.exe